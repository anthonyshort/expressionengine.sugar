<?xml version="1.0" encoding="UTF-8"?>
<!--

CodeSense Providers map contexts in a document to possible completions. The actual completions are defined in the various CodeSense libraries, categorized using their key. A CodeSense Provider tells Espresso what CodeSense libraries are active in the current context. One of these XML files can contain many <provider> elements.

-->
<codesense>
	
	<provider>
		<selector>text.html.ee, ee.tag.open, ee.tag.self-closing</selector>
		<completions>com.expressionengine.variables.global</completions>
		<completions>com.expressionengine.tags.pairs</completions>
		<completions>com.expressionengine.tags.modules</completions>
		
		<!-- Temporary. I'm manually selecting the completions -->
		<completions>com.expressionengine.variables.exp:weblog:category_heading</completions>
		<completions>com.expressionengine.variables.exp:weblog:category_archive</completions>
		<completions>com.expressionengine.variables.exp:weblog:categories</completions>
		<completions>com.expressionengine.variables.exp:weblog:calendar</completions>
		<completions>com.expressionengine.variables.exp:weblog:month_links</completions>
		<completions>com.expressionengine.variables.exp:weblog:info</completions>
		<completions>com.expressionengine.variables.paginate</completions>
		<completions>com.expressionengine.variables.exp:comment:form</completions>
		<completions>com.expressionengine.variables.exp:comment:entries.special</completions>
		<completions>com.expressionengine.variables.exp:comment:entries</completions>
		<completions>com.expressionengine.variables.exp:weblog:entries</completions>
		<completions>com.expressionengine.variables.exp:weblog:entries.special</completions>
		<completions>com.expressionengine.variables.global.special</completions>
		<completions>com.expressionengine.variables.global</completions>
		<completions>com.expressionengine.tags.modules</completions>
		
		<completions>com.expressionengine.pairs</completions>
				
		<complete-match capture="2">(\{)([a-zA-Z0-9-:]*)</complete-match>
	</provider>
	
	<!-- Attributes -->
	<provider>
		<selector>ee.tag:has-child(entity:capture(name)),ee.tag:has-child(entity:capture(name)) > ee.end</selector>
		<completions>com.expressionengine.tags.${name}.attributes</completions>
		<complete-match capture="2">(\s)([a-zA-Z0-9]*)</complete-match>
	</provider>
	
	 <!-- Attribute Values -->
	 <provider>
		<!-- it doesnt seem to be putting the captured attribute name into the completion string -->
	    <selector>ee.attribute:has-child(attribute-name:capture(val))</selector>
	    <completions>com.expressionengine.tags.attributes.${val}</completions>
	    <complete-match capture="2">(\s)([a-zA-Z0-9-]*)</complete-match>
	  </provider>
	
	<!-- Context Specific Variables -->
	<!-- <provider>
		<selector>ee.tag:has-child(open:has-child(name:capture(name))), ee.tag:has-child(open:has-child(name:capture(name))) > ee.tag.self-closing</selector>
		<completions>com.expressionengine.variables.${name}</completions>
		<completions>com.expressionengine.pairs.${name}</completions>
		<complete-match capture="2">(\{)([a-zA-Z0-9]*)</complete-match>
	</provider> -->
	
</codesense>
